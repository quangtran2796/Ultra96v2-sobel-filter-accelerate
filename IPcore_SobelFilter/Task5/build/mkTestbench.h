/*
 * Generated by Bluespec Compiler (build e76ca21)
 * 
 * On Sat Feb 13 13:21:26 CET 2021
 * 
 */

/* Generation options: */
#ifndef __mkTestbench_h__
#define __mkTestbench_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTestbench module */
class MOD_mkTestbench : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt64> INST_axi_convert_address_image_1;
  MOD_Reg<tUInt64> INST_axi_convert_address_image_2;
  MOD_Fifo<tUInt64> INST_axi_convert_buffer;
  MOD_Reg<tUInt32> INST_axi_convert_bufferRowCount;
  MOD_Fifo<tUInt8> INST_axi_convert_buffer_8bit;
  MOD_Reg<tUInt64> INST_axi_convert_conversion_finished;
  MOD_Reg<tUInt8> INST_axi_convert_converting_flag;
  MOD_Reg<tUInt64> INST_axi_convert_ddr_read_count;
  MOD_Reg<tUInt64> INST_axi_convert_ddr_write_count;
  MOD_Reg<tUInt8> INST_axi_convert_enq_order;
  MOD_Reg<tUInt32> INST_axi_convert_gray_data;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg11;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg12;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg13;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg21;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg22;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg23;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg31;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg32;
  MOD_Reg<tUInt8> INST_axi_convert_gx_reg33;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg11;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg12;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg13;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg21;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg22;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg23;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg31;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg32;
  MOD_Reg<tUInt8> INST_axi_convert_gy_reg33;
  MOD_Reg<tUInt32> INST_axi_convert_image_length;
  MOD_Reg<tUInt64> INST_axi_convert_image_size;
  MOD_Reg<tUInt32> INST_axi_convert_kernel_size;
  MOD_Wire<tUInt64> INST_axi_convert_master_read_araddrOut;
  MOD_Wire<tUInt8> INST_axi_convert_master_read_arprotOut;
  MOD_Wire<tUInt8> INST_axi_convert_master_read_arreadyIn;
  MOD_Fifo<tUWide> INST_axi_convert_master_read_in;
  MOD_Reg<tUInt8> INST_axi_convert_master_read_isRst_isInReset;
  MOD_Fifo<tUWide> INST_axi_convert_master_read_out;
  MOD_Wire<tUInt64> INST_axi_convert_master_read_rdataIn;
  MOD_Wire<tUInt8> INST_axi_convert_master_read_rrespIn;
  MOD_Wire<tUInt8> INST_axi_convert_master_read_rvalidIn;
  MOD_CReg<tUWide> INST_axi_convert_master_write_addrOut_rv;
  MOD_Wire<tUInt64> INST_axi_convert_master_write_awaddrOut;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_awprotOut;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_awreadyIn;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_brespIn;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_bvalidIn;
  MOD_CReg<tUWide> INST_axi_convert_master_write_dataOut_rv;
  MOD_Fifo<tUWide> INST_axi_convert_master_write_in;
  MOD_Reg<tUInt8> INST_axi_convert_master_write_isRst_isInReset;
  MOD_Fifo<tUInt8> INST_axi_convert_master_write_out;
  MOD_Wire<tUInt64> INST_axi_convert_master_write_wdataOut;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_wreadyIn;
  MOD_Wire<tUInt8> INST_axi_convert_master_write_wstrbOut;
  MOD_Reg<tUInt8> INST_axi_convert_outPixel;
  MOD_Reg<tUInt8> INST_axi_convert_reg11;
  MOD_Reg<tUInt8> INST_axi_convert_reg12;
  MOD_Reg<tUInt8> INST_axi_convert_reg13;
  MOD_Reg<tUInt8> INST_axi_convert_reg21;
  MOD_Reg<tUInt8> INST_axi_convert_reg22;
  MOD_Reg<tUInt8> INST_axi_convert_reg23;
  MOD_Reg<tUInt8> INST_axi_convert_reg31;
  MOD_Reg<tUInt8> INST_axi_convert_reg32;
  MOD_Reg<tUInt8> INST_axi_convert_reg33;
  MOD_Fifo<tUInt8> INST_axi_convert_rowBuffer_1;
  MOD_Fifo<tUInt8> INST_axi_convert_rowBuffer_2;
  MOD_Reg<tUInt8> INST_axi_convert_rowBuffer_inital;
  MOD_Wire<tUInt64> INST_axi_convert_slave_read_araddrIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_read_arprotIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_read_arvalidIn;
  MOD_Fifo<tUWide> INST_axi_convert_slave_read_in;
  MOD_Reg<tUInt8> INST_axi_convert_slave_read_isRst_isInReset;
  MOD_Fifo<tUWide> INST_axi_convert_slave_read_out;
  MOD_Wire<tUInt64> INST_axi_convert_slave_read_rdataOut;
  MOD_Wire<tUInt8> INST_axi_convert_slave_read_rreadyIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_read_rrespOut;
  MOD_CReg<tUWide> INST_axi_convert_slave_write_addrIn_rv;
  MOD_Wire<tUInt64> INST_axi_convert_slave_write_awaddrIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_awprotIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_awvalidIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_breadyIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_brespOut;
  MOD_CReg<tUWide> INST_axi_convert_slave_write_dataIn_rv;
  MOD_Fifo<tUWide> INST_axi_convert_slave_write_in;
  MOD_Reg<tUInt8> INST_axi_convert_slave_write_isRst_isInReset;
  MOD_Fifo<tUInt8> INST_axi_convert_slave_write_out;
  MOD_Wire<tUInt64> INST_axi_convert_slave_write_wdataIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_wstrbIn;
  MOD_Wire<tUInt8> INST_axi_convert_slave_write_wvalidIn;
  MOD_Reg<tUInt8> INST_axi_convert_slide;
  MOD_Reg<tUInt8> INST_axi_convert_slide_finish;
  MOD_Reg<tUInt32> INST_axi_convert_slide_position;
  MOD_Reg<tUInt8> INST_axi_convert_sobelConvert;
  MOD_Reg<tUInt8> INST_axi_convert_sobelState;
  MOD_Reg<tUInt64> INST_axi_convert_start;
  MOD_Reg<tUInt8> INST_axi_convert_start_write_request;
  MOD_Reg<tUInt64> INST_axi_convert_state_64;
  MOD_Reg<tUInt8> INST_axi_convert_state_temp;
  MOD_Fifo<tUInt8> INST_axi_convert_sum1Buffer;
  MOD_Fifo<tUInt8> INST_axi_convert_sum2Buffer;
  MOD_Reg<tUInt32> INST_axi_convert_sum_1;
  MOD_Reg<tUInt32> INST_axi_convert_sum_12;
  MOD_Reg<tUInt32> INST_axi_convert_sum_2;
  MOD_Reg<tUInt32> INST_axi_convert_test1;
  MOD_Reg<tUInt32> INST_axi_convert_test2;
  MOD_Reg<tUInt8> INST_axi_convert_test3;
  MOD_Reg<tUInt8> INST_axi_convert_test4;
  MOD_Fifo<tUInt8> INST_axi_convert_testslideWindow;
  MOD_Reg<tUInt8> INST_axi_convert_testslideWindow_control;
  MOD_Reg<tUInt8> INST_axi_convert_testslideWindow_count;
  MOD_Reg<tUInt32> INST_axi_convert_threshold;
  MOD_Reg<tUInt8> INST_axi_convert_windowBuffer_once_inital;
  MOD_Reg<tUInt8> INST_axi_convert_windowReady;
  MOD_Reg<tUInt8> INST_axi_convert_windowSlide;
  MOD_Reg<tUInt8> INST_axi_convert_window_Initial;
  MOD_Wire<tUInt64> INST_m_rd_araddrOut;
  MOD_Wire<tUInt8> INST_m_rd_arprotOut;
  MOD_Wire<tUInt8> INST_m_rd_arreadyIn;
  MOD_CReg<tUWide> INST_m_rd_in_rv;
  MOD_Reg<tUInt8> INST_m_rd_isRst_isInReset;
  MOD_CReg<tUWide> INST_m_rd_out_rv;
  MOD_Wire<tUInt64> INST_m_rd_rdataIn;
  MOD_Wire<tUInt8> INST_m_rd_rrespIn;
  MOD_Wire<tUInt8> INST_m_rd_rvalidIn;
  MOD_CReg<tUWide> INST_m_wr_addrOut_rv;
  MOD_Wire<tUInt64> INST_m_wr_awaddrOut;
  MOD_Wire<tUInt8> INST_m_wr_awprotOut;
  MOD_Wire<tUInt8> INST_m_wr_awreadyIn;
  MOD_Wire<tUInt8> INST_m_wr_brespIn;
  MOD_Wire<tUInt8> INST_m_wr_bvalidIn;
  MOD_CReg<tUWide> INST_m_wr_dataOut_rv;
  MOD_CReg<tUWide> INST_m_wr_in_rv;
  MOD_Reg<tUInt8> INST_m_wr_isRst_isInReset;
  MOD_CReg<tUInt8> INST_m_wr_out_rv;
  MOD_Wire<tUInt64> INST_m_wr_wdataOut;
  MOD_Wire<tUInt8> INST_m_wr_wreadyIn;
  MOD_Wire<tUInt8> INST_m_wr_wstrbOut;
  MOD_Wire<tUInt64> INST_s_rd_araddrIn;
  MOD_Wire<tUInt8> INST_s_rd_arprotIn;
  MOD_Wire<tUInt8> INST_s_rd_arvalidIn;
  MOD_CReg<tUWide> INST_s_rd_in_rv;
  MOD_Reg<tUInt8> INST_s_rd_isRst_isInReset;
  MOD_CReg<tUWide> INST_s_rd_out_rv;
  MOD_Wire<tUInt64> INST_s_rd_rdataOut;
  MOD_Wire<tUInt8> INST_s_rd_rreadyIn;
  MOD_Wire<tUInt8> INST_s_rd_rrespOut;
  MOD_CReg<tUWide> INST_s_wd_addrIn_rv;
  MOD_Wire<tUInt64> INST_s_wd_awaddrIn;
  MOD_Wire<tUInt8> INST_s_wd_awprotIn;
  MOD_Wire<tUInt8> INST_s_wd_awvalidIn;
  MOD_Wire<tUInt8> INST_s_wd_breadyIn;
  MOD_Wire<tUInt8> INST_s_wd_brespOut;
  MOD_CReg<tUWide> INST_s_wd_dataIn_rv;
  MOD_CReg<tUWide> INST_s_wd_in_rv;
  MOD_Reg<tUInt8> INST_s_wd_isRst_isInReset;
  MOD_CReg<tUInt8> INST_s_wd_out_rv;
  MOD_Wire<tUInt64> INST_s_wd_wdataIn;
  MOD_Wire<tUInt8> INST_s_wd_wstrbIn;
  MOD_Wire<tUInt8> INST_s_wd_wvalidIn;
  MOD_Reg<tUInt8> INST_testState;
 
 /* Constructor */
 public:
  MOD_mkTestbench(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_axi_convert_master_write_dataOut_rv_port1__rea_ETC___d224;
  tUInt8 DEF_axi_convert_master_write_addrOut_rv_port1__rea_ETC___d216;
  tUInt8 DEF_axi_convert_master_write_isRst_isInReset__h10107;
  tUInt8 DEF_axi_convert_master_read_isRst_isInReset__h9330;
  tUInt8 DEF_axi_convert_slave_write_isRst_isInReset__h7597;
  tUInt8 DEF_axi_convert_slave_read_isRst_isInReset__h6819;
  tUInt8 DEF_s_wd_out_rv_port1__read__14_BIT_2___d115;
  tUInt8 DEF_s_wd_isRst_isInReset__h4680;
  tUInt8 DEF_s_rd_out_rv_port1__read__2_BIT_66___d73;
  tUInt8 DEF_s_rd_isRst_isInReset__h3530;
  tUInt8 DEF_m_wr_dataOut_rv_port1__read__5_BIT_72___d46;
  tUInt8 DEF_m_wr_addrOut_rv_port1__read__7_BIT_67___d38;
  tUInt8 DEF_m_wr_isRst_isInReset__h1297;
  tUInt8 DEF_m_rd_in_rv_port1__read_BIT_67___d3;
  tUInt8 DEF_m_rd_isRst_isInReset__h122;
  tUWide DEF_s_wd_in_rv_port1__read____d657;
  tUWide DEF_s_wd_in_rv_port0__read____d85;
  tUWide DEF_m_wr_in_rv_port1__read____d21;
  tUWide DEF_m_wr_in_rv_port0__read____d659;
  tUWide DEF_axi_convert_master_write_dataOut_rv_port1__read____d223;
  tUWide DEF_axi_convert_master_write_dataOut_rv_port0__read____d204;
  tUWide DEF_axi_convert_slave_write_dataIn_rv_port1__read____d144;
  tUWide DEF_axi_convert_slave_write_dataIn_rv_port0__read____d163;
  tUWide DEF_s_wd_dataIn_rv_port1__read____d83;
  tUWide DEF_s_wd_dataIn_rv_port0__read____d105;
  tUWide DEF_m_wr_dataOut_rv_port1__read____d45;
  tUWide DEF_m_wr_dataOut_rv_port0__read____d26;
  tUWide DEF_axi_convert_master_write_addrOut_rv_port1__read____d215;
  tUWide DEF_axi_convert_master_write_addrOut_rv_port0__read____d201;
  tUWide DEF_axi_convert_slave_write_addrIn_rv_port1__read____d142;
  tUWide DEF_axi_convert_slave_write_addrIn_rv_port0__read____d153;
  tUWide DEF_s_wd_addrIn_rv_port1__read____d81;
  tUWide DEF_s_wd_addrIn_rv_port0__read____d95;
  tUWide DEF_s_rd_in_rv_port1__read____d630;
  tUWide DEF_s_rd_in_rv_port0__read____d62;
  tUWide DEF_m_wr_addrOut_rv_port1__read____d37;
  tUWide DEF_m_wr_addrOut_rv_port0__read____d23;
  tUWide DEF_m_rd_in_rv_port1__read____d2;
  tUWide DEF_m_rd_in_rv_port0__read____d668;
  tUWide DEF_s_rd_out_rv_port1__read____d72;
  tUWide DEF_s_rd_out_rv_port0__read____d632;
  tUWide DEF_m_rd_out_rv_port1__read____d676;
  tUWide DEF_m_rd_out_rv_port0__read____d11;
  tUInt64 DEF_x__h13189;
  tUInt64 DEF_x__h13183;
  tUInt8 DEF_x__h18657;
  tUInt8 DEF_x__h16138;
  tUInt8 DEF_b__h21052;
  tUInt8 DEF_s_wd_out_rv_port1__read____d114;
  tUInt8 DEF_m_wr_out_rv_port1__read____d666;
  tUInt8 DEF_axi_convert_master_write_out_notFull____d233;
  tUInt8 DEF_axi_convert_master_read_out_notFull____d193;
  tUInt8 DEF_axi_convert_master_read_in_notEmpty____d184;
  tUInt8 DEF_axi_convert_slave_write_out_notEmpty____d175;
  tUInt8 DEF_axi_convert_slave_read_out_notEmpty____d135;
  tUInt8 DEF_axi_convert_slave_read_in_notFull____d126;
  tUInt8 DEF_NOT_axi_convert_master_write_isRst_isInReset_99___d217;
  tUInt8 DEF_NOT_axi_convert_master_read_isRst_isInReset_79___d181;
  tUInt8 DEF_NOT_axi_convert_slave_write_dataIn_rv_port0__r_ETC___d165;
  tUInt8 DEF_NOT_axi_convert_slave_write_addrIn_rv_port0__r_ETC___d155;
  tUInt8 DEF_NOT_axi_convert_slave_write_isRst_isInReset_41___d156;
  tUInt8 DEF_NOT_axi_convert_slave_read_isRst_isInReset_21___d123;
  tUInt8 DEF_NOT_s_wd_dataIn_rv_port0__read__05_BIT_72_06___d107;
  tUInt8 DEF_NOT_s_wd_addrIn_rv_port0__read__5_BIT_67_6___d97;
  tUInt8 DEF_NOT_s_wd_isRst_isInReset_0___d98;
  tUInt8 DEF_NOT_s_rd_in_rv_port0__read__2_BIT_67_3___d64;
  tUInt8 DEF_NOT_s_rd_isRst_isInReset_1___d65;
  tUInt8 DEF_NOT_m_wr_out_rv_port0__read__3_BIT_2_4___d55;
  tUInt8 DEF_NOT_m_wr_isRst_isInReset_0___d39;
  tUInt8 DEF_NOT_m_rd_out_rv_port0__read__1_BIT_66_2___d13;
  tUInt8 DEF_NOT_m_rd_isRst_isInReset___d4;
 
 /* Local definitions */
 private:
  tUInt32 DEF_x__h16175;
  tUWide DEF__dfoo2;
  tUWide DEF_IF_s_rd_in_rv_port1__read__30_BITS_8_TO_3_36_E_ETC___d649;
  tUWide DEF_axi_convert_master_write_in_first____d209;
  tUWide DEF_axi_convert_slave_write_in_first____d267;
  tUWide DEF_axi_convert_master_read_in_first____d187;
  tUWide DEF_axi_convert_slave_read_in_first____d240;
  tUWide DEF_axi_convert_master_read_out_first____d292;
  tUWide DEF_axi_convert_slave_read_out_first____d138;
  tUInt64 DEF_data__h18800;
  tUInt64 DEF_x__h18818;
  tUInt64 DEF_x__h13237;
  tUInt32 DEF_y__h18720;
  tUInt32 DEF_x__h18717;
  tUInt32 DEF_axi_convert_sum_12__h18448;
  tUInt32 DEF_axi_convert_sum_2__h18010;
  tUInt32 DEF_axi_convert_sum_1__h17922;
  tUInt8 DEF_b__h17676;
  tUInt8 DEF_b__h17668;
  tUInt8 DEF_b__h17660;
  tUInt8 DEF_b__h17652;
  tUInt8 DEF_b__h17644;
  tUInt8 DEF_b__h17636;
  tUInt8 DEF_b__h17628;
  tUInt8 DEF_b__h17620;
  tUWide DEF_m_wr_in_rv_port1__read__1_BITS_74_TO_3___d35;
  tUWide DEF_axi_convert_master_write_in_first__09_BITS_74__ETC___d213;
  tUWide DEF_axi_convert_slave_write_dataIn_rv_port1__read__ETC___d150;
  tUWide DEF_s_wd_dataIn_rv_port1__read__3_BITS_71_TO_0___d91;
  tUInt32 DEF_y__h18718;
  tUInt8 DEF_m_wr_out_rv_port1__read__66_BITS_1_TO_0_74_EQ_0___d675;
  tUInt8 DEF_testState_62_PLUS_1___d665;
  tUInt8 DEF_x__h18485;
  tUInt8 DEF_x__h15657;
  tUWide DEF__1_CONCAT_s_wd_addrIn_rv_port1__read__1_BITS_66_ETC___d94;
  tUWide DEF_s_wd_dataIn_rv_port1__read__3_BITS_71_TO_0_1_C_ETC___d93;
  tUWide DEF__0_CONCAT_DONTCARE___d31;
  tUWide DEF_axi_convert_slave_write_addrIn_rv_port1__read__ETC___d152;
  tUWide DEF_axi_convert_address_image_2_52_PLUS_axi_conver_ETC___d551;
  tUWide DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_74_TO_3_5___d36;
  tUWide DEF__1_CONCAT_axi_convert_master_write_in_first__09_ETC___d214;
  tUWide DEF__1_CONCAT_s_wd_wdataIn_wget__11_CONCAT_s_wd_wst_ETC___d113;
  tUWide DEF__1_CONCAT_axi_convert_slave_write_wdataIn_wget__ETC___d171;
  tUWide DEF__0_CONCAT_DONTCARE___d50;
  tUWide DEF__1_CONCAT_axi_convert_master_write_in_first__09_ETC___d212;
  tUWide DEF__1_CONCAT_axi_convert_slave_write_awaddrIn_wget_ETC___d162;
  tUWide DEF__1_CONCAT_s_wd_awaddrIn_wget__02_CONCAT_s_wd_aw_ETC___d104;
  tUWide DEF__1_CONCAT_m_wr_in_rv_port1__read__1_BITS_138_TO_ETC___d34;
  tUWide DEF__1_CONCAT_s_rd_araddrIn_wget__9_CONCAT_s_rd_arp_ETC___d71;
  tUWide DEF__0_CONCAT_DONTCARE___d8;
  tUWide DEF__1_CONCAT_m_rd_rdataIn_wget__7_CONCAT_m_rd_rres_ETC___d19;
  tUWide DEF__0_CONCAT_DONTCARE___d77;
  tUWide DEF_axi_convert_slave_read_araddrIn_wget__29_CONCA_ETC___d131;
  tUWide DEF_axi_convert_address_image_1_51_PLUS_axi_conver_ETC___d285;
  tUWide DEF_axi_convert_master_read_rdataIn_wget__96_CONCA_ETC___d198;
  tUWide DEF_IF_axi_convert_slave_read_in_first__40_BITS_8__ETC___d260;
  tUInt8 DEF__0_CONCAT_DONTCARE___d119;
 
 /* Rules */
 public:
  void RL_m_rd_isRst_isResetAssertedUpdate();
  void RL_m_rd_deqIn();
  void RL_m_rd_forwardIn();
  void RL_m_rd_enqOut();
  void RL_m_wr_isRst_isResetAssertedUpdate();
  void RL_m_wr_splitAddrData();
  void RL_m_wr_deqAddr();
  void RL_m_wr_forwardAddr();
  void RL_m_wr_deqData();
  void RL_m_wr_forwardData();
  void RL_m_wr_forwardResp();
  void RL_s_rd_isRst_isResetAssertedUpdate();
  void RL_s_rd_addrInWrite();
  void RL_s_rd_deqOut();
  void RL_s_rd_putOutData();
  void RL_s_wd_isRst_isResetAssertedUpdate();
  void RL_s_wd_mergeAddrData();
  void RL_s_wd_addrInWrite();
  void RL_s_wd_dataInWrite();
  void RL_s_wd_outWrite();
  void RL_s_wd_outForward();
  void RL_axi_convert_slave_read_isRst_isResetAssertedUpdate();
  void RL_axi_convert_slave_read_addrInWrite();
  void RL_axi_convert_slave_read_deqOut();
  void RL_axi_convert_slave_read_putOutData();
  void RL_axi_convert_slave_write_isRst_isResetAssertedUpdate();
  void RL_axi_convert_slave_write_mergeAddrData();
  void RL_axi_convert_slave_write_addrInWrite();
  void RL_axi_convert_slave_write_dataInWrite();
  void RL_axi_convert_slave_write_outWrite();
  void RL_axi_convert_slave_write_outForward();
  void RL_axi_convert_master_read_isRst_isResetAssertedUpdate();
  void RL_axi_convert_master_read_deqIn();
  void RL_axi_convert_master_read_forwardIn();
  void RL_axi_convert_master_read_enqOut();
  void RL_axi_convert_master_write_isRst_isResetAssertedUpdate();
  void RL_axi_convert_master_write_splitAddrData();
  void RL_axi_convert_master_write_deqAddr();
  void RL_axi_convert_master_write_forwardAddr();
  void RL_axi_convert_master_write_deqData();
  void RL_axi_convert_master_write_forwardData();
  void RL_axi_convert_master_write_forwardResp();
  void RL_axi_convert_handleReadRequest();
  void RL_axi_convert_handleWriteRequest();
  void RL_axi_convert_readRequest();
  void RL_axi_convert_localDataBuffer();
  void RL_axi_convert_localDataBuffer_8bit();
  void RL_axi_convert_rowBufferInital();
  void RL_axi_convert_rowBufferInital_finish();
  void RL_axi_convert_initial_testslideWindow();
  void RL_axi_convert_initial_testslideWindow_finish();
  void RL_axi_convert_windowBuffer_inital();
  void RL_axi_convert_windowBuffer_inital_2();
  void RL_axi_convert_windowBuffer_inital_3();
  void RL_axi_convert_windowBuffer_inital_end();
  void RL_axi_convert_windowBuffer_slide();
  void RL_axi_convert_sobelOperator();
  void RL_axi_convert_absSum1();
  void RL_axi_convert_sumUp();
  void RL_axi_convert_limitMagnitude();
  void RL_axi_convert_thresholdPixel();
  void RL_axi_convert_writePixel();
  void RL_axi_convert_writeRequest();
  void RL_axi_convert_requestResponse();
  void RL_forward1();
  void RL_forward2();
  void RL_forward3();
  void RL_forward4();
  void RL_forward5();
  void RL_forward6();
  void RL_forward7();
  void RL_forward8();
  void RL_forward1_1();
  void RL_forward2_1();
  void RL_forward3_1();
  void RL_forward4_1();
  void RL_forward5_1();
  void RL_forward6_1();
  void RL_forward7_1();
  void RL_forward8_1();
  void RL_forward9();
  void RL_forward10();
  void RL_forward11();
  void RL_forward1_2();
  void RL_forward2_2();
  void RL_forward3_2();
  void RL_forward4_2();
  void RL_forward5_2();
  void RL_forward6_2();
  void RL_forward7_2();
  void RL_forward8_2();
  void RL_forward1_3();
  void RL_forward2_3();
  void RL_forward3_3();
  void RL_forward4_3();
  void RL_forward5_3();
  void RL_forward6_3();
  void RL_forward7_3();
  void RL_forward8_3();
  void RL_forward9_1();
  void RL_forward10_1();
  void RL_forward11_1();
  void RL_handleReadRequest();
  void RL_handleWriteRequest();
  void RL_write_register1();
  void RL_read_register12();
  void RL_read_register13();
  void RL_write_register2();
  void RL_read_register21();
  void RL_read_register23();
  void RL_write_register3();
  void RL_read_register31();
  void RL_read_register33();
  void RL_write_register4();
  void RL_read_register41();
  void RL_read_register43();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTestbench &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTestbench &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTestbench &backing);
};

#endif /* ifndef __mkTestbench_h__ */
